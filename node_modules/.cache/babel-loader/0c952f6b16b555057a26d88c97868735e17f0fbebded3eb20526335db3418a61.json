{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"v-services\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"services-zag\"\n}, \"Услуги и направления\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"service-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.services, service => {\n    return _openBlock(), _createBlock(_component_router_link, {\n      key: service,\n      class: \"service-button\",\n      style: {\n        \"margin-right\": \"10px\"\n      },\n      to: {\n        name: service.route,\n        hash: '#head'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(service.name), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","services","service","_createBlock","_component_router_link","key","style","to","name","route","hash"],"sources":["D:\\Projects\\Клиника здоровья\\klinika\\src\\components\\v-services.vue"],"sourcesContent":["<template>\r\n    <div class=\"v-services\">\r\n        <div class=\"services-zag\">Услуги и направления</div>\r\n        <div class=\"service-buttons\">\r\n            <router-link\r\n                v-for=\"service in services\" :key=\"service\"\r\n                class=\"service-button\"\r\n                style=\"margin-right: 10px;\"\r\n                :to=\"{ name: service.route, hash: '#head'}\"\r\n            >\r\n                {{ service.name }}\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'v-services',\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n        services: [\r\n            {\r\n                name: 'Гастроэнтеролог', \r\n                route: 'Gastr'\r\n            },\r\n            {\r\n                name: 'Гинеколог', \r\n                route: 'Ginecolog'\r\n            },\r\n            {\r\n                name: 'Кардиолог', \r\n                route: 'Cardiolog'\r\n            },\r\n            {\r\n                name: 'ЛОР', \r\n                route: 'LOR'\r\n            },\r\n            {\r\n                name: 'Невролог', \r\n                route: 'Nevrolog'\r\n            },\r\n            {\r\n                name: 'Онколог', \r\n                route: 'Onkolog'\r\n            },\r\n            {\r\n                name: 'Офтальмолог', \r\n                route: 'Oftalmolog'\r\n            },\r\n            {\r\n                name: 'Терапевт', \r\n                route: 'Terapevt'\r\n            },\r\n            {\r\n                name: 'Уролог',\r\n                route: 'Urolog'\r\n            },\r\n            {\r\n                name: 'Хирург', \r\n                route: 'Hirurg'\r\n            },\r\n            {\r\n                name: 'Эндокринолог', \r\n                route: 'Endocrinolog'\r\n            },\r\n            {\r\n                name: 'Медицинские комиссии', \r\n                route: 'Medcom'\r\n            },\r\n            {\r\n                name: 'Процедурный кабинет', \r\n                route: 'Procedures'\r\n            },\r\n            {\r\n                name: 'Рентген', \r\n                route: 'Rentgen'\r\n            },\r\n            {\r\n                name: 'УЗИ', \r\n                route: 'USI'\r\n            },\r\n            {\r\n                name: 'Анализы', \r\n                route: 'Analysis'\r\n            },\r\n            {\r\n                name: 'Функциональная диагностика',\r\n                route: 'Diagnostika'\r\n            },\r\n            // {\r\n            //     name: 'Фитотерапевт',\r\n            //     route: 'Fitoterapevt'\r\n            // }\r\n        ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.v-services{\r\n    width: 85%;\r\n    margin: auto;\r\n    margin-top: 80px;\r\n}\r\n\r\n.service-buttons {\r\n    width: 100%;\r\n    margin-top: 20px;\r\n}\r\n\r\n.service-button {\r\n    margin-top: 15px;\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    height: auto;\r\n    border: 2px solid #358c21;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    background-color: #b9ecad;\r\n    font-size: 20px;\r\n    box-shadow: 2px 2px 2px gray;\r\n    color: black;\r\n}\r\n\r\n.service-button:hover{\r\n    box-shadow: 2px 2px 10px gray;\r\n}\r\n\r\n.services-zag {\r\n    width: 100%;\r\n    font-size: 50px;\r\n    color: #358c21;\r\n    font-weight: bold;\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n    .services-zag {\r\n        font-size: 34px;\r\n    }\r\n    .service-button {\r\n        font-size: 16px;\r\n    }\r\n\r\n}\r\n@media screen and (min-width: 701px) and  (max-width: 1100px){\r\n\r\n}\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAY;gCACnBC,mBAAA,CAAoD;EAA/CD,KAAK,EAAC;AAAc,GAAC,sBAAoB;;EACzCA,KAAK,EAAC;AAAiB;;;uBAFhCE,mBAAA,CAYM,OAZNC,UAYM,GAXFC,UAAoD,EACpDH,mBAAA,CASM,OATNI,UASM,I,kBARFH,mBAAA,CAOcI,SAAA,QAAAC,WAAA,CANQC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADlBC,YAAA,CAOcC,sBAAA;MANmBC,GAAG,EAAEH,OAAO;MACzCV,KAAK,EAAC,gBAAgB;MACtBc,KAA2B,EAA3B;QAAA;MAAA,CAA2B;MAC1BC,EAAE;QAAAC,IAAA,EAAUN,OAAO,CAACO,KAAK;QAAAC,IAAA;MAAA;;wBAE1B,MAAkB,C,kCAAfR,OAAO,CAACM,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}