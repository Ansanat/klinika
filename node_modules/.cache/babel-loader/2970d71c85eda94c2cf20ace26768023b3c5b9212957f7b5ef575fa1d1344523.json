{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"v-service\"\n};\nconst _hoisted_2 = {\n  class: \"service-about\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"service-header\\\">Кардиолог</div><div class=\\\"service-text\\\">Сердечно-сосудистые заболевания по всему миру считаются самой распространенной причиной ранней смертности. По статистике смерть от болезней сердца составляет 40-60% ежегодно от общего количества смертей. В России чрезвычайно распространены такие заболевания, как ишемическая болезнь сердца и артериальная гипертония.</div><div class=\\\"service-text\\\">Кардиолог — врач, специализирующийся на диагностике, лечении и профилактике сердечно-сосудистых заболеваний. Задача кардиолога — вовремя выявить и устранить факторы риска возникновения болезней сердца, предупредить развитие их осложнений, подобрать подходящее лечение</div><div class=\\\"service-text\\\"><b>В каких случаях необходима консультация кардиолога?</b></div><div class=\\\"service-text\\\" style=\\\"text-align:left;\\\"> • при частых или периодических предобморочных состояниях и обмороках, возникающих без каких-либо на то причин;<br> • боли в сердце, возникающей при физической нагрузке;<br> • общей слабости организма, чрезмерной потливости, головокружениях, а также повышенной утомляемости;<br> • повышении или снижении артериального давления;<br> • возникновении чувства нехватки воздуха (одышки) во время физических нагрузок;<br> • ощущении замирания, перебоев в работе сердца, при сильном сердцебиении в покое;<br> • возникновении болей за грудиной жгучего, сжимающего или давящего характера, отдающих в левую руку, шею;<br> • частых колющих болях в области сердца;<br> • появлении отеков, особенно на нижних конечностях, не проходящих к утру.<br></div><div class=\\\"service-header\\\">Услуги кардиолога</div>\", 6);\nconst _hoisted_9 = {\n  class: \"price-table\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"price-line\"\n}, null, -1);\nconst _hoisted_11 = {\n  class: \"price-row\"\n};\nconst _hoisted_12 = {\n  class: \"price-name\"\n};\nconst _hoisted_13 = {\n  class: \"price-price\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"price-line\"\n}, null, -1);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"service-header\"\n}, \"Услуги кардиолога Торошиной Т.В.\", -1);\nconst _hoisted_16 = {\n  class: \"price-table\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"price-line\"\n}, null, -1);\nconst _hoisted_18 = {\n  class: \"price-row\"\n};\nconst _hoisted_19 = {\n  class: \"price-name\"\n};\nconst _hoisted_20 = {\n  class: \"price-price\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"price-line\"\n}, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cardiolog_services, service => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: service\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString(service.name), 1), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(service.price), 1)]), _hoisted_14]);\n  }), 128))]), _hoisted_15, _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.toroshina_services, service => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: service\n    }, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, _toDisplayString(service.name), 1), _createElementVNode(\"div\", _hoisted_20, _toDisplayString(service.price), 1)]), _hoisted_21]);\n  }), 128))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_9","_hoisted_10","_Fragment","_renderList","$data","cardiolog_services","service","key","_hoisted_11","_hoisted_12","_toDisplayString","name","_hoisted_13","price","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","toroshina_services","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21"],"sources":["/home/vitalii/projects/klinika/src/pages/service-pages/v-cardiolog.vue"],"sourcesContent":["<template>\n  <div class=\"v-service\">\n    <div class=\"service-about\">\n        <div class=\"service-header\">Кардиолог</div>\n        <div class=\"service-text\">Сердечно-сосудистые заболевания по всему миру считаются самой распространенной причиной ранней смертности. По статистике смерть от болезней сердца составляет 40-60% ежегодно от общего количества смертей. В России чрезвычайно распространены такие заболевания, как ишемическая болезнь сердца и артериальная гипертония.</div>\n        <div class=\"service-text\">Кардиолог — врач, специализирующийся на диагностике, лечении и профилактике сердечно-сосудистых заболеваний. Задача кардиолога — вовремя выявить и устранить факторы риска возникновения болезней сердца, предупредить развитие их осложнений, подобрать подходящее лечение</div>\n        <div class=\"service-text\"><b>В каких случаях необходима консультация кардиолога?</b></div>\n        <div class=\"service-text\" style=\"text-align: left;\">\n            •\tпри частых или периодических предобморочных состояниях и обмороках, возникающих без каких-либо на то причин;<br>\n            •\tболи в сердце, возникающей при физической нагрузке;<br>\n            •\tобщей слабости организма, чрезмерной потливости, головокружениях, а также повышенной утомляемости;<br>\n            •\tповышении или снижении артериального давления;<br>\n            •\tвозникновении чувства нехватки воздуха (одышки) во время физических нагрузок;<br>\n            •\tощущении замирания, перебоев в работе сердца, при сильном сердцебиении в покое;<br>\n            •\tвозникновении болей за грудиной жгучего, сжимающего или давящего характера, отдающих в левую руку, шею;<br>\n            •\tчастых колющих болях в области сердца;<br>\n            •\tпоявлении отеков, особенно на нижних конечностях, не проходящих к утру.<br>\n        </div>\n\n        <div class=\"service-header\">Услуги кардиолога</div>\n        <div class=\"price-table\">\n            <div class=\"price-line\"></div>\n            <div v-for=\"service in cardiolog_services\" :key=\"service\">\n                <div class=\"price-row\">\n                <div class=\"price-name\">{{service.name}}</div>\n                <div class=\"price-price\">{{service.price}}</div>\n                </div>\n                <div class=\"price-line\"></div>\n            </div>\n        </div>\n\n        <div class=\"service-header\">Услуги кардиолога Торошиной Т.В.</div>\n        <div class=\"price-table\">\n            <div class=\"price-line\"></div>\n            <div v-for=\"service in toroshina_services\" :key=\"service\">\n                <div class=\"price-row\">\n                <div class=\"price-name\">{{service.name}}</div>\n                <div class=\"price-price\">{{service.price}}</div>\n                </div>\n                <div class=\"price-line\"></div>\n            </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'v-gastr',\n    props: {\n    },\n    mounted() {\n        const meta = document.createElement(\"meta\");\n        meta.name = \"description\";\n        meta.content = \"Клиника здоровья кардиолог\";\n        document.body.appendChild(meta);\n    },\n    data() {\n        return {\n            cardiolog_services: [\n                {\n                    name: 'Первичный прием (кандидат медицинских наук)',\n                    price: '2 300 руб'\n                },\n                {\n                    name: 'Повторный прием (кандидат медицинских наук)',\n                    price: '2 100 руб'\n                },\n                {\n                    name: 'Оформление МЭС',\n                    price: '2 500 руб'\n                },\n                {\n                    name: 'Консультация на дому без ЭКГ',\n                    price: '3 200 руб'\n                },\n                {\n                    name: 'Консультация на дому + ЭКГ',\n                    price: '4 200 руб'\n                },\n                {\n                    name: 'Электрокардиограмма (ЭКГ) с расшифровкой',\n                    price: '700 руб'\n                },\n                {\n                    name: 'Электрокардиограмма (ЭКГ) без расшифровки',\n                    price: '500 руб'\n                },\n                {\n                    name: 'Электрокардиограмма с нагрузкой (ЭКГ с нагрузкой) с расшифровкой',\n                    price: '1300 руб'\n                },\n                {\n                    name: 'Холтеровское мониторирование сердечного ритма (ХМ-ЭКГ) + Суточное мониторирование артериального давления (СМАД)',\n                    price: '3 000 руб'\n                },\n                {\n                    name: 'Холтеровское мониторирование сердечного ритма (ХМ-ЭКГ)',\n                    price: '2 000 руб'\n                },\n                {\n                    name: 'Суточное мониторирование артериального давления (СМАД)',\n                    price: '1 800 руб'\n                },\n            ],\n            toroshina_services: [\n                {\n                    name: 'Первичный прием',\n                    price: '2 000 руб'\n                },\n                {\n                    name: 'Повторный прием',\n                    price: '1 800 руб'\n                },\n            ]\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAe;;;EAkBjBA,KAAK,EAAC;AAAa;iCACpBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAa;iCAExBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAY;iCAI/BC,mBAAA,CAAkE;EAA7DD,KAAK,EAAC;AAAgB,GAAC,kCAAgC;;EACvDA,KAAK,EAAC;AAAa;iCACpBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAa;iCAExBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAY;;uBAtCrCE,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJF,mBAAA,CAwCM,OAxCNG,UAwCM,GAvCFC,UAA2C,EAiB3CJ,mBAAA,CASM,OATNK,UASM,GARFC,WAA8B,G,kBAC9BL,mBAAA,CAMMM,SAAA,QAAAC,WAAA,CANiBC,KAAA,CAAAC,kBAAkB,EAA7BC,OAAO;yBAAnBV,mBAAA,CAMM;MANsCW,GAAG,EAAED;IAAO,IACpDX,mBAAA,CAGM,OAHNa,WAGM,GAFNb,mBAAA,CAA8C,OAA9Cc,WAA8C,EAAAC,gBAAA,CAApBJ,OAAO,CAACK,IAAI,OACtChB,mBAAA,CAAgD,OAAhDiB,WAAgD,EAAAF,gBAAA,CAArBJ,OAAO,CAACO,KAAK,M,GAExCC,WAA8B,C;eAItCC,WAAkE,EAClEpB,mBAAA,CASM,OATNqB,WASM,GARFC,WAA8B,G,kBAC9BrB,mBAAA,CAMMM,SAAA,QAAAC,WAAA,CANiBC,KAAA,CAAAc,kBAAkB,EAA7BZ,OAAO;yBAAnBV,mBAAA,CAMM;MANsCW,GAAG,EAAED;IAAO,IACpDX,mBAAA,CAGM,OAHNwB,WAGM,GAFNxB,mBAAA,CAA8C,OAA9CyB,WAA8C,EAAAV,gBAAA,CAApBJ,OAAO,CAACK,IAAI,OACtChB,mBAAA,CAAgD,OAAhD0B,WAAgD,EAAAX,gBAAA,CAArBJ,OAAO,CAACO,KAAK,M,GAExCS,WAA8B,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}